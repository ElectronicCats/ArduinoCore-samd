/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include "variant.h"

/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{
  // ----------------------
  //0 - PA22-LED_BUILTIN
  { PORTB, 22, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, //LED_BUILTIN

  //1 - 10 SERCOM
  //SIM Serial1 SERCOM1
  { PORTA, 0, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // RX
  { PORTA, 1, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // TX
  //MODBUS Serial2 SERCOM2
  { PORTA, 9, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // RO (RX)
  { PORTA, 14, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // DI(TX)
  //LoRa SPI Serial3 SERCOM3
  { PORTA,  17, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SS
  { PORTA,  18, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // MOSI
  { PORTA,  19, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_TIMER|PIN_ATTR_ANALOG),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SCK
  { PORTA,  22, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // MISO
  //SDI12- Serial Serial0 SERCOM0
  { PORTA,  8, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // S_SD (TX)
  { NOT_A_PORT,  0, PER_ATTR_NONE, PIO_NOT_A_PIN, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // RX

  // 11..16 - Analog pins
  // --------------------
  { PORTA,  2, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_2, GCLK_CCL_NONE },  // A0 
  { PORTA,  3, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_ANALOG, NOT_ON_TIMER, ADC_Channel1, EXTERNAL_INT_NONE, GCLK_CCL_NONE },                // A1 
  { PORTB,  8, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_ANALOG, NOT_ON_TIMER, ADC_Channel2, EXTERNAL_INT_8, GCLK_CCL_NONE },        // A2 
  { PORTA,  5, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG),  NOT_ON_TIMER, ADC_Channel5, EXTERNAL_INT_5, GCLK_CCL_NONE },  // A3 
  { PORTA,  6, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_ANALOG), TCC1_CH0, ADC_Channel6, EXTERNAL_INT_6, GCLK_CCL_NONE },  // A4 
  { PORTA,  10,PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_TIMER), TC4_CH0, ADC_Channel18, EXTERNAL_INT_10, GCLK_CCL_NONE }, //   A5

  // 17..18 - USB
  // --------------------  
  { PORTA, 24, PIO_COM, PER_ATTR_DRIVE_STD, PIN_ATTR_NONE, No_ADC_Channel,  NOT_ON_TIMER, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // USB/DM
  { PORTA, 25, PIO_COM, PER_ATTR_DRIVE_STD, PIN_ATTR_NONE, No_ADC_Channel,  NOT_ON_TIMER, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // USB/DP
 
  // 19..20
  // Digital High                   
  { PORTA, 30, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SWCLK /
  { PORTA, 31, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, // SWDIO /

  // 21..33
  // Digital pins
  { PORTA,  4, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG),  NOT_ON_TIMER, ADC_Channel4, EXTERNAL_INT_4, GCLK_CCL_NONE },        // RE 21
  { PORTA,  7, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER|PIN_ATTR_ANALOG), TCC1_CH1, ADC_Channel7, EXTERNAL_INT_7, GCLK_CCL_NONE },  // DIO0 22
  { PORTA, 12, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_12, GCLK_CCL_NONE }, // DIO2 23
  { PORTA, 15, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_15, GCLK_CCL_NONE }, // DIO5 24
  { PORTA, 16, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_0, GCLK_CCL_NONE },  // RFM_RST 25
  { PORTA, 21, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_5, GCLK_CCL_NONE },  // AX1 26
  { PORTA, 27, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_15, GCLK_CCL_NONE },  // CC_2 27
  { PORTB,  2, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG),  NOT_ON_TIMER, ADC_Channel10, EXTERNAL_INT_2, GCLK_CCL_NONE },      // S_DS 28
  { PORTB,  3, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG),  NOT_ON_TIMER, ADC_Channel11, EXTERNAL_INT_3, GCLK_CCL_NONE },      // S_DS2 29
  { PORTB,  9, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG|PIN_ATTR_TIMER), TC4_CH1, ADC_Channel3, EXTERNAL_INT_9, GCLK_CCL_NONE },   // DE
  { PORTB, 10, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_10, GCLK_CCL_NONE  },  // AX0
  { PORTB, 11, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG),  NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_11, GCLK_CCL_NONE },   // DIO1
  { PORTB, 23, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC2_CH1, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE },  // CC_1
  // Total de pines:34
} ;

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC3, TC4, TC5 } ;

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
SERCOM sercom4( SERCOM4 );
SERCOM sercom5( SERCOM5 );

// Serial1
Uart Serial1(&sercom1, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX);

void SERCOM1_Handler()
{
  Serial1.IrqHandler();
}

// Serial2
Uart Serial2(&sercom2, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX);

void SERCOM2_Handler()
{
  Serial2.IrqHandler();
}

// Serial3
Uart Serial3(&sercom0, PIN_SERIAL3_RX,  PIN_SERIAL3_TX, PAD_SERIAL3_RX, PAD_SERIAL3_TX);

void SERCOM0_Handler()
{
  Serial3.IrqHandler();
}
