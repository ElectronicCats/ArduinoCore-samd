/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include "variant.h"

/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{
//PORTA  
//0 - 1 - I2C SERCOM1
{PORTA, 0, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_2, GCLK_CCL_NONE},//SDA
{PORTA, 1, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, ADC_Channel1, EXTERNAL_INT_3, GCLK_CCL_NONE},//SCL

//2 - 4 
{PORTA, 2, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_2, GCLK_CCL_NONE},   //Y0
{PORTA, 3, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel1, EXTERNAL_INT_NONE, GCLK_CCL_NONE},//Y1
{PORTA, 4, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel4, EXTERNAL_INT_4, GCLK_CCL_NONE},   //PA04

//GPIO D5 & D6
{PORTA, 5, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//GPIO 6
{PORTA, 6, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC),NOT_ON_TIMER, ADC_Channel6, EXTERNAL_INT_6, GCLK_CCL_NONE },//Y4

//7 - 8 - Capacitive Sensor
{PORTA, 7, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel7, EXTERNAL_INT_7, GCLK_CCL_NONE},   //PA07
{PORTA, 8, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel16, EXTERNAL_INT_NMI, GCLK_CCL_NONE },  //Y6

//GPIO 9
{PORTA, 9, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC),NOT_ON_TIMER, ADC_Channel17, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//Y7

//10 - Capacitive Sensor
{PORTA, 10, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel18, EXTERNAL_INT_7, GCLK_CCL_NONE },  //Y8
 
//11-13 - Analogic Pins
{PORTA, 11, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel19, EXTERNAL_INT_9, GCLK_CCL_NONE}, //Y9
{PORTA, 12, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel17, EXTERNAL_INT_9, GCLK_CCL_NONE},   //TX SERCOM2
{PORTA, 13, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel18, EXTERNAL_INT_10, GCLK_CCL_NONE }, //RX SERCOM2

//GPIO 14 - 16
{PORTB, 14, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, //GPIO 11
{PORTB, 15, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, //GPIO 12   
{PORTB, 16, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE }, //GPIO 13   

//GPIO 17
{PORTA, 17,PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel19, EXTERNAL_INT_11, GCLK_CCL_NONE }, //A0                      // A10 

//18-19 
{PORTA, 18, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_STD),(PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE},//TX
{PORTA, 19, PIO_SERCOM, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_STD),(PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE},//RX

//GPIO 20
{PORTA, 20, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL,NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//GPIO 11

//LED on 23
{PORTA, 21, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//PA21
{PORTA, 22, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//PA22
{PORTA, 23, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//LED

//24 - 26 USB
{PORTA, 24, PIO_COM, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },// USB/D-
{PORTA, 25, PIO_COM, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },// USB/D+
{PORTA, 26, PIO_MULTI, (PER_ATTR_DRIVE_STD|PER_ATTR_SERCOM_ALT), (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//MISO

//27 
{PORTA, 27, PIO_MULTI, (PER_ATTR_DRIVE_STD|PER_ATTR_TIMER_STD), (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC4_CH0, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE },//LED

//28-29 - 
{PORTA, 28, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },
{PORTA, 29, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },

//30-32 - NC
{PORTA, 30, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//SWCLK 
{PORTA, 31, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//SWDIO 
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC

//33-34 - SWD
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC

//35...38 - PORTB
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{PORTB, 2, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel10, EXTERNAL_INT_2, GCLK_CCL_NONE },
{PORTB, 3, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel11, EXTERNAL_INT_3, GCLK_CCL_NONE },

//39...42 - PORTB
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC

//43...47 - PORTB
{PORTB, 8, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel2, EXTERNAL_INT_8, GCLK_CCL_NONE },//PB08
{PORTB, 9, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, ADC_Channel3, EXTERNAL_INT_9, GCLK_CCL_NONE }, //Y15
{PORTB, 10, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_10, GCLK_CCL_NONE }, //Y2
{PORTB, 11, PIO_MULTI, PER_ATTR_DRIVE_STD, (PIN_ATTR_ANALOG|PIN_ATTR_ADC), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_11, GCLK_CCL_NONE },//Y3
{NOT_A_PORT, 0, PIO_MULTI, PER_ATTR_DRIVE_STD, PIN_ATTR_DIGITAL, NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_NONE, GCLK_CCL_NONE },//NC

} ;

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC0, TC1, TC4 } ;
// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
SERCOM sercom4( SERCOM4 ) ;
SERCOM sercom5( SERCOM5 ) ;

Uart Serial1( &sercom2, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX ) ;

void SERCOM2_Handler()
{
  Serial1.IrqHandler();
}

